{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Trustify Helm chart values",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "appDomain",
    "tracing",
    "metrics"
  ],
  "properties": {
    "$schema": {
      "type": "string"
    },
    "global": {
      "type": "object"
    },
    "appDomain": {
      "type": "string",
      "description": "The base part of the URLs being generated by the chart.\n\nWhen using OpenShift, this should be the application domain, when can be evaluated by running the following\ncommand: `oc -n openshift-ingress-operator get ingresscontrollers.operator.openshift.io default -o jsonpath='{.status.domain}'`.\n"
    },
    "partOf": {
      "type": "string",
      "default": "trustify",
      "description": "The \"part of\" label when creating resources. This can help grouping together deployments.\n"
    },
    "extraVolumes": {
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.api.core.v1.Volume"
      }
    },
    "extraVolumeMounts": {
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.api.core.v1.VolumeMount"
      }
    },
    "storage": {
      "$ref": "#/definitions/StorageConfig"
    },
    "image": {
      "$ref": "#/definitions/ImageConfig"
    },
    "authenticator": {
      "$ref": "#/definitions/AuthenticatorConfig"
    },
    "openshift": {
      "type": "object",
      "additionalProperties": false,
      "description": "Additional configuration settings in the context of OpenShift.\n",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Controls of OpenShift specific features are enabled. By default, the chart evaluate automatically if\nthe target cluster is OpenShift and will set the flag accordingly.\n"
        },
        "useServiceCa": {
          "type": "boolean",
          "default": true,
          "description": "Control the usage of the OpenShift service CA.\n"
        }
      }
    },
    "oidc": {
      "$ref": "#/definitions/Oidc"
    },
    "replicas": {
      "type": "integer",
      "minimum": 0,
      "description": "The default number of replicas for scalable deployments.\n"
    },
    "ingress": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Controls whether ingress resources should be created globally. Defaults to true for backward compatibility.\n"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Multiple hostnames for the ingress. If specified, overrides the single host configuration.\nThese hosts will be automatically used for TLS configuration if no explicit TLS config is provided.\n"
        },
        "className": {
          "type": "string"
        },
        "additionalAnnotations": {
          "type": "object"
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "secretName": {
                "type": "string"
              }
            }
          },
          "description": "TLS configuration for the ingress. Each item can specify hosts and secretName for TLS termination.\nIf not specified and hosts are defined, TLS will be automatically configured using the hosts.\n"
        }
      }
    },
    "infrastructure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "port": {
          "type": "integer",
          "description": "Port on which infrastructure services are exposed.\n"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0,
          "description": "The initial delay seconds for the infrastructure probes.\n"
        }
      }
    },
    "metrics": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable support for application metrics.\n"
        },
        "otelMetricExportInterval": {
          "type": "integer",
          "description": "The interval in milliseconds for exporting metrics. Will be used as the value for the `OTEL_METRIC_EXPORT_INTERVAL` variable.\n"
        }
      }
    },
    "tracing": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable support for distributed tracing.\n"
        },
        "otelBspMaxExportBatchSize": {
          "type": "integer",
          "minimum": 1,
          "description": "The maximum batch size for exporting spans. Will be used as the value for the `OTEL_BSP_MAX_EXPORT_BATCH_SIZE` variable.\n"
        },
        "otelTracesSampler": {
          "type": "string",
          "description": "The trace sampling strategy. Will be used as the value for the `OTEL_TRACES_SAMPLER` variable.\n"
        },
        "otelTracesSamplerArg": {
          "type": "string",
          "description": "The trace sampling probability. Will be used as the value for the `OTEL_TRACES_SAMPLER_ARG` variable.\n"
        }
      }
    },
    "collector": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "endpoint": {
          "type": "string",
          "pattern": "^(http|https)://",
          "description": "OpenTelemetry collector endpoint for tracing and metrics.\n"
        }
      }
    },
    "rust": {
      "$ref": "#/definitions/RustApplicationConfig"
    },
    "tls": {
      "type": "object",
      "properties": {
        "additionalTrustAnchor": {
          "type": "string",
          "description": "The path of the certificate to add to the list of trust anchors"
        }
      }
    },
    "modules": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "server": {
          "description": "The main server process.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Feature"
            },
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "#/definitions/Ingress"
            },
            {
              "$ref": "#/definitions/Application"
            },
            {
              "$ref": "#/definitions/Scalable"
            },
            {
              "$ref": "#/definitions/RustApplication"
            },
            {
              "$ref": "#/definitions/Authenticator"
            },
            {
              "$ref": "#/definitions/Infrastructure"
            },
            {
              "$ref": "#/definitions/Metrics"
            },
            {
              "$ref": "#/definitions/Tracing"
            },
            {
              "$ref": "#/definitions/HttpApplication"
            },
            {
              "$ref": "#/definitions/Postgres"
            },
            {
              "type": "object",
              "properties": {
                "uploadLimit": {
                  "$ref": "#/definitions/ByteSize"
                },
                "maximumCacheSize": {
                  "description": "The maximum number of the bytes the analysis cache will hold before evicting entries.\n",
                  "$ref": "#/definitions/ByteSize"
                }
              }
            }
          ]
        },
        "importer": {
          "description": "The main server process.\n",
          "allOf": [
            {
              "$ref": "#/definitions/Feature"
            },
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "#/definitions/Application"
            },
            {
              "$ref": "#/definitions/RustApplication"
            },
            {
              "$ref": "#/definitions/Infrastructure"
            },
            {
              "$ref": "#/definitions/Metrics"
            },
            {
              "$ref": "#/definitions/Tracing"
            },
            {
              "$ref": "#/definitions/Postgres"
            },
            {
              "type": "object",
              "properties": {
                "workingDirectory": {
                  "type": "object",
                  "required": [
                    "size"
                  ],
                  "properties": {
                    "size": {
                      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                    }
                  }
                },
                "concurrency": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "The max number of import jobs that may run concurrently\n"
                },
                "storageClassName": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "createDatabase": {
          "description": "Job to create a database in a PostgreSQL instance\n",
          "allOf": [
            {
              "$ref": "#/definitions/Feature"
            },
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "#/definitions/Application"
            }
          ]
        },
        "migrateDatabase": {
          "description": "Job to apply all database migrations\n",
          "allOf": [
            {
              "$ref": "#/definitions/Feature"
            },
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "#/definitions/Application"
            }
          ]
        },
        "createImporters": {
          "description": "Job to create a set of pre-defined importers\n",
          "allOf": [
            {
              "$ref": "#/definitions/Feature"
            },
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "#/definitions/Application"
            },
            {
              "$ref": "#/definitions/Postgres"
            },
            {
              "type": "object",
              "properties": {
                "importers": {
                  "type": "object",
                  "description": "The importers to create",
                  "additionalProperties": {
                    "$ref": "https://raw.githubusercontent.com/guacsec/trustify/main/modules/importer/schema/importer.json"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "database": {
      "$ref": "#/definitions/PostgresConfig"
    },
    "createDatabase": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/PostgresConfig"
        }
      }
    },
    "migrateDatabase": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/PostgresConfig"
        }
      }
    },
    "keycloak": {
      "$ref": "#/definitions/Feature"
    },
    "keycloakPostInstall": {
      "$ref": "#/definitions/Feature"
    },
    "postgresql": {
      "$ref": "#/definitions/Feature"
    },
    "jaeger": {
      "$ref": "#/definitions/Feature"
    },
    "prometheus": {
      "$ref": "#/definitions/Feature"
    }
  },
  "allOf": [
    {
      "if": {
        "anyOf": [
          {
            "properties": {
              "metrics": {
                "properties": {
                  "enabled": {
                    "const": true
                  }
                },
                "required": [
                  "enabled"
                ]
              }
            }
          },
          {
            "properties": {
              "tracing": {
                "properties": {
                  "enabled": {
                    "const": true
                  }
                },
                "required": [
                  "enabled"
                ]
              }
            }
          }
        ]
      },
      "then": {
        "required": [
          "collector"
        ],
        "properties": {
          "collector": {
            "required": [
              "endpoint"
            ]
          }
        }
      }
    }
  ],
  "definitions": {
    "Scalable": {
      "description": "Configuration options for a scalable deployment.\n",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "minimum": 0
            }
          }
        }
      ]
    },
    "Application": {
      "type": "object",
      "description": "Basic application settings\n",
      "properties": {
        "serviceAccountName": {
          "type": "string"
        },
        "resources": {
          "type": "object"
        },
        "affinity": {
          "type": "object"
        }
      }
    },
    "RustApplication": {
      "type": "object",
      "properties": {
        "rust": {
          "$ref": "#/definitions/RustApplicationConfig"
        }
      }
    },
    "RustApplicationConfig": {
      "type": "object",
      "properties": {
        "logFilter": {
          "type": "string",
          "description": "Filter for the `env_logger` logging backend. Will be used as the value for the `RUST_LOG` variable.\n"
        },
        "backtrace": {
          "type": "boolean",
          "description": "Allow enabling backtraces in Rust based application, by setting the value of `RUST_BACKTRACE` to `1`.\n"
        }
      }
    },
    "Infrastructure": {
      "type": "object",
      "properties": {
        "infrastructure": {
          "$ref": "#/definitions/InfrastructureConfig"
        }
      }
    },
    "InfrastructureConfig": {
      "type": "object",
      "properties": {
        "port": {
          "$ref": "#/definitions/ValueOrRef"
        }
      }
    },
    "Metrics": {
      "type": "object",
      "required": [
        "metrics"
      ],
      "properties": {
        "metrics": {
          "$ref": "#/definitions/MetricsConfig"
        }
      }
    },
    "MetricsConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "otelMetricExportInterval": {
          "type": "integer",
          "description": "The interval in milliseconds for exporting metrics. Will be used as the value for the `OTEL_METRIC_EXPORT_INTERVAL` variable.\n"
        }
      }
    },
    "Tracing": {
      "type": "object",
      "required": [
        "tracing"
      ],
      "properties": {
        "tracing": {
          "$ref": "#/definitions/TracingConfig"
        }
      }
    },
    "TracingConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "otelBspMaxExportBatchSize": {
          "type": "integer",
          "minimum": 1,
          "description": "The maximum batch size for exporting spans. Will be used as the value for the `OTEL_BSP_MAX_EXPORT_BATCH_SIZE` variable.\n"
        },
        "otelTracesSampler": {
          "type": "string",
          "description": "The trace sampling strategy. Will be used as the value for the `OTEL_TRACES_SAMPLER` variable.\n"
        },
        "otelTracesSamplerArg": {
          "type": "string",
          "description": "The trace sampling probability. Will be used as the value for the `OTEL_TRACES_SAMPLER_ARG` variable.\n"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/ImageConfig"
        }
      }
    },
    "ImageConfig": {
      "description": "Configuration for the source of the container image. This can either be the full name of the image, or a\ncombination or registry, name, and version.\n",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "fullName"
          ],
          "properties": {
            "fullName": {
              "type": "string"
            },
            "pullPolicy": {
              "$ref": "#/definitions/ImagePullPolicy"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "registry": {
              "type": "string"
            },
            "pullPolicy": {
              "$ref": "#/definitions/ImagePullPolicy"
            },
            "version": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ImagePullPolicy": {
      "type": "string",
      "enum": [
        "IfNotPresent",
        "Always",
        "Never"
      ]
    },
    "Ingress": {
      "type": "object",
      "required": [
        "ingress"
      ],
      "properties": {
        "ingress": {
          "$ref": "#/definitions/IngressConfig"
        }
      }
    },
    "IngressConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hostnames for the ingress. If not specified, defaults to [{service-name}{appDomain}].\nThese hosts will be automatically used for TLS configuration if no explicit TLS config is provided.\n"
        },
        "className": {
          "type": "string"
        },
        "additionalAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional annotations which will be used as annotations on `Ingress` resources.\n"
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "secretName": {
                "type": "string"
              }
            }
          },
          "description": "TLS configuration for the ingress. Each item can specify hosts and secretName for TLS termination.\nIf not specified and hosts are defined, TLS will be automatically configured using the hosts.\n"
        }
      }
    },
    "Feature": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A flag to enable/disable the whole feature. This can be used on individual modules to completely disable\ntheir deployment.\n"
        }
      }
    },
    "Authenticator": {
      "type": "object",
      "properties": {
        "authenticator": {
          "$ref": "#/definitions/AuthenticatorConfig"
        }
      }
    },
    "AuthenticatorConfig": {
      "description": "The configuration file of the authentication process for all non-GUAC processes.\n\nThis can either be a full configuration file in either structured or string form. Or it can be a reference\nto a config map, which is expected to contain a suitable configuration file.\n\nBy default, a suitable file will be created for the configured OIDC issuer solution used. The default OIDC issuer\nis Keycloak. This can be overridden using the `type` property.\n",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/ConfigMapRef"
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "content"
          ],
          "properties": {
            "content": {
              "$ref": "https://raw.githubusercontent.com/guacsec/trustify/main/common/auth/schema/auth.json"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "keycloak"
              ]
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "cognito"
              ]
            }
          }
        }
      ]
    },
    "Oidc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "issuerUrl": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "insecure": {
          "type": "boolean",
          "description": "Use insecure TLS when communicating with the issuer (DANGER!)\n",
          "default": false
        },
        "clients": {
          "properties": {
            "frontend": {
              "description": "OIDC client configuration for the frontend/SPoG.\n",
              "$ref": "#/definitions/OidcPublicClient"
            },
            "walker": {
              "description": "OIDC client configuration for the backend.\n",
              "$ref": "#/definitions/OidcSecretClient"
            },
            "testing-user": {
              "description": "OIDC client for testing user operations during the Integration Test\n",
              "$ref": "#/definitions/OidcSecretClient"
            },
            "testing-manager": {
              "description": "OIDC client for testing manager operations during the Integration Test\n",
              "$ref": "#/definitions/OidcSecretClient"
            }
          }
        }
      }
    },
    "OidcClient": {
      "type": "object",
      "properties": {
        "clientId": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "issuerUrl": {
          "type": "string",
          "format": "uri"
        },
        "insecure": {
          "type": "boolean",
          "description": "Use insecure TLS when communicating with the issuer (DANGER!)",
          "default": false
        }
      }
    },
    "OidcPublicClient": {
      "allOf": [
        {
          "$ref": "#/definitions/OidcClient"
        },
        {
          "type": "object",
          "properties": {
            "scopes": {
              "type": "string"
            }
          }
        }
      ]
    },
    "OidcSecretClient": {
      "allOf": [
        {
          "$ref": "#/definitions/OidcClient"
        },
        {
          "type": "object",
          "required": [
            "clientSecret"
          ],
          "properties": {
            "clientSecret": {
              "$ref": "#/definitions/ValueOrRef"
            }
          }
        }
      ]
    },
    "ValueOrRef": {
      "description": "Accepts either a direct value, or a reference to the source of the value.\n",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/ValueRef"
        }
      ]
    },
    "ValueRef": {
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "valueFrom"
          ],
          "properties": {
            "valueFrom": {
              "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.api.core.v1.EnvVarSource"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ConfigMapRef": {
      "type": "object",
      "additionalProperties": false,
      "description": "A reference to a `ConfigMap`.\n",
      "required": [
        "configMapRef"
      ],
      "properties": {
        "configMapRef": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the config map"
            },
            "key": {
              "type": "string",
              "description": "The name of the key inside the config map"
            }
          }
        }
      }
    },
    "SecretRef": {
      "type": "object",
      "additionalProperties": false,
      "description": "A reference to a `Secret`.\n",
      "required": [
        "secretRef"
      ],
      "properties": {
        "secretRef": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the secret"
            },
            "key": {
              "type": "string",
              "description": "The name of the key inside the secret"
            }
          }
        }
      }
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storage": {
          "$ref": "#/definitions/StorageConfig"
        }
      }
    },
    "StorageConfig": {
      "description": "Configuration for the storage.\n",
      "oneOf": [
        {
          "$ref": "#/definitions/FileSystemStorageConfig"
        },
        {
          "$ref": "#/definitions/S3StorageConfig"
        }
      ]
    },
    "FileSystemStorageConfig": {
      "description": "Configure a filesystem storage.\n",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "size"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "filesystem"
          ]
        },
        "size": {
          "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "storageClassName": {
          "type": "string"
        },
        "compression": {
          "$ref": "#/definitions/StorageCompression",
          "description": "The compression algorithm used when storing documents.\n"
        }
      }
    },
    "S3StorageConfig": {
      "description": "Configure an S3 compatible object storage.\n",
      "type": "object",
      "required": [
        "type",
        "accessKey",
        "secretKey",
        "bucket",
        "region"
      ],
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "s3"
          ]
        },
        "accessKey": {
          "description": "The access key/username to the storage resource\n",
          "$ref": "#/definitions/ValueOrRef"
        },
        "secretKey": {
          "description": "The secret key/password to the storage resource\n",
          "$ref": "#/definitions/ValueOrRef"
        },
        "bucket": {
          "type": "string",
          "description": "The name of the bucket.\n"
        },
        "region": {
          "$ref": "#/definitions/ValueOrRef",
          "description": "The AWS region of the bucket, or an endpoint.\n"
        },
        "compression": {
          "$ref": "#/definitions/StorageCompression",
          "description": "The compression algorithm used when storing documents.\n"
        },
        "pathStyle": {
          "type": "boolean",
          "description": "Allow enabling path style access.\n"
        }
      }
    },
    "StorageCompression": {
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "zstd"
      ]
    },
    "Postgres": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/PostgresConfig"
        }
      }
    },
    "PostgresConfig": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "host",
        "name",
        "username",
        "password"
      ],
      "properties": {
        "host": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "port": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "name": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "username": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "password": {
          "$ref": "#/definitions/ValueOrRef"
        },
        "sslMode": {
          "$ref": "#/definitions/PostgresSslMode"
        },
        "minimumConnections": {
          "description": "The minimum number of connections created in the connection pool.\n",
          "type": "integer",
          "minimum": 0
        },
        "maximumConnections": {
          "description": "The maximum number of connections created in the connection pool.\n",
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "PostgresSslMode": {
      "type": "string",
      "enum": [
        "allow",
        "disable",
        "require"
      ]
    },
    "Scheduled": {
      "type": "object",
      "description": "Configuration options for a scheduled job.\n",
      "properties": {
        "schedule": {
          "type": "string",
          "description": "A Kubernetes `CronJob` schedule expression.\n"
        },
        "suspend": {
          "type": "boolean",
          "description": "Allows suspending, but keeping, a `CronJob`.\n"
        }
      }
    },
    "ByteSize": {
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "string",
          "description": "Size in bytes, allowing to use a unit such as KiB or MB.",
          "pattern": "^[0-9]+([KMG]i?B)?$"
        }
      ]
    },
    "HttpApplication": {
      "type": "object",
      "properties": {
        "requestLimit": {
          "$ref": "#/definitions/ByteSize"
        },
        "jsonLimit": {
          "$ref": "#/definitions/ByteSize"
        },
        "workers": {
          "type": "number",
          "minimum": 1,
          "description": "The number of HTTP workers of the Actix application.\n\nAlso see: <https://actix.rs/docs/server/#multi-threading>\n"
        }
      }
    }
  }
}
